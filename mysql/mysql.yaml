apiVersion: v1
kind: ReplicationController
metadata:
  name: el-admin-mysql-rc
  namespace: el-admin
  labels:
    name: el-admin-mysql-rc
spec:
  replicas: 1
  selector:
    name: el-admin-mysql-rc
  template:
    metadata:
      labels: 
        name: el-admin-mysql-rc
    spec:
      containers:
      - name: mysql
        image: mysql
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root"
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql          #MySQL容器的数据都是存在这个目录的，要对这个目录做数据持久化
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: el-admin-mysql-pvc       #指定pvc的名称
 
---
apiVersion: v1
kind: Service
metadata:
  name: el-admin-mysql-svc
  namespace: el-admin
  labels: 
    name: el-admin-mysql-svc
spec:
  type: NodePort
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
    name: http
    nodePort: 3306
  selector:
    name: el-admin-mysql-rc

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: el-admin-mysql-ingress
  namespace: el-admin
spec:
  rules:
  - host: eladmin.charon.com
    http:
      paths:
      - path: / 
        pathType: Prefix
        backend:
         service:
           name: el-admin-mysql-svc
           port: 
             number: 3306
          
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: el-admin-mysql-pv
  namespace: el-admin
spec:
  capacity:
    storage: 2Gi 
  accessModes:
  - ReadWriteMany 
  persistentVolumeReclaimPolicy: Recycle 
  storageClassName: nfs
  nfs: 
    path: /nfs/mysql
    server: 192.168.2.130
  
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: el-admin-mysql-pvc
  namespace: el-admin
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs  
  resources:
    requests:
      storage: 2Gi
